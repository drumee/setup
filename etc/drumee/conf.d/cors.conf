#
# CORS header support
#
# One way to use this is by placing it into a file called "cors_support"
# under your Nginx configuration directory and placing the following
# statement inside your **location** block(s):
#
#   include cors_support;
#
# As of Nginx 1.7.5, add_header supports an "always" parameter which
# allows CORS to work if the backend returns 4xx or 5xx status code.
#
# For more information on CORS, please see: http://enable-cors.org/
# Forked from this Gist: https://gist.github.com/michiel/1064640
#

set $cors 'true';
# if ($http_origin ~ '^https?://(localhost|*\.drumee\.com)') {
#     set $cors 'true';
# }

if ($cors = 'true') {
    add_header 'Access-Control-Allow-Origin' "$http_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
    # required to be able to read Authorization header in frontend
    #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
}

if ($request_method = 'OPTIONS') {
    # Tell client that this pre-flight info is valid for 20 days
    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    add_header 'Content-Length' 0;
    return 204;
}
# if ($request_method = 'OPTIONS') {
#   add_header 'Access-Control-Allow-Origin' '*';
#   #
#   # Om nom nom cookies
#   #
#   add_header 'Access-Control-Allow-Credentials' 'true';
#   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#   #
#   # Custom headers and headers various browsers *should* be OK with but aren't
#   #
#   add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
#   #
#   # Tell client that this pre-flight info is valid for 20 days
#   #
#   add_header 'Access-Control-Expose-Headers' 'Accept-Ranges,Content-Encoding,Content-Length,Content-Range,Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma,Date';
#   add_header 'Access-Control-Max-Age' 1728000;
#   add_header 'Content-Type' 'text/plain charset=UTF-8';
#   add_header 'Content-Length' 0;
#   return 204;
# }
# if ($request_method = 'POST') {
#     add_header 'Access-Control-Allow-Origin' '*';
#     add_header 'Access-Control-Allow-Credentials' 'true';
#     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#     add_header 'Access-Control-Allow-Headers' 'DNT,x-param-xia-data,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
# }
# if ($request_method = 'GET') {
#     add_header 'Access-Control-Allow-Origin' '*';
#     add_header 'Access-Control-Allow-Credentials' 'true';
#     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#     add_header 'Access-Control-Allow-Headers' 'DNT,x-param-xia-data,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
# }
